[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 1 products, 1 sources, 3 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/HammingTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(Hamming$,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(copy$default$2,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(b,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(Hamming;init;,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(synchronized,[Default]), UsedName(Hamming,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(a,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe Hamming$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(copy$default$2,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(b,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(Hamming;init;,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(synchronized,[Default]), UsedName(Hamming,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(a,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Hamming$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Hamming$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of HammingTest: Set(UsedName(Hamming,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(Hamming$,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(copy$default$2,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(b,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(Hamming;init;,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(synchronized,[Default]), UsedName(Hamming,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(a,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(productPrefix,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(HammingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(HammingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: HammingTest[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /Users/kellycho/Exercism/scala/hamming/target/scala-2.12/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.5.3:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 796c4640 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/kellycho/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.8/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/kellycho/Exercism/scala/hamming/target/scala-2.12/test-classes:/Users/kellycho/Exercism/scala/hamming/target/scala-2.12/classes:/Users/kellycho/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest_2.12/3.0.1/scalatest_2.12-3.0.1.jar:/Users/kellycho/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.12/3.0.1/scalactic_2.12-3.0.1.jar:/Users/kellycho/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.8/scala-reflect-2.12.8.jar:/Users/kellycho/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.0.5/scala-xml_2.12-1.0.5.jar:/Users/kellycho/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.0.4/scala-parser-combinators_2.12-1.0.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.43331368 s[0m
[0m[[0m[0minfo[0m] [0m[0mdone compiling[0m
